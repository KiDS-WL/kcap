#####################################################################
# Data and precision parameters for the KiDS-1000 COSEBIs '2cosmos' #
# likelihood that allows to split the KiDS-1000 data set into two   #
# mutually exclusive subsets with independent cosmological          #
# parameters and calculations. The subsets are still coupled        #
# through the joint covariance matrix.                              #
#                                                                   #
# To be used with data from K1K et al. 2020                         #
# (arXiv:20XX.YYYY) available from:                                 #
#                                                                   #
# http://kids.strw.leidenuniv.nl/sciencedata.php                    #
#                                                                   #
# Please refer to Koehlinger et al. 2019 (MNRAS, 484, 3126) and     #
# Section 7.4 in Hildebrandt et al. 2018 (arXiv:1812.06076)         #
# for the application of this likelihood.                           #
#                                                                   #
# ATTENTION:                                                        #
# 1) This likelihood does NOT work with the standard Monte Python   #
# but requires the modified '2cosmos' version available from:       #
#                                                                   #
# https://github.com/fkoehlin/montepython_2cosmos_public            #
#                                                                   #
# 2) This likelihood only produces valid results for \Omega_k = 0,  #
# i.e. flat cosmologies!                                            #
#####################################################################

### GENERAL SETTINGS ###

## DATA LOCATION ##

# set the path to the main data-folder:
K1K_COSEBIs_2cosmos.data_directory = '/your/path/to/KiDS-1000_DATA_RELEASE/'

# set the path to the main folder of KCAP:
# (this is required for importing the cosebis and scale_cuts modules )
K1K_COSEBIs_2cosmos.kcap_directory = '/your/path/to/KCAP/'

# for loading of files:

# set name of FITS file containing all the data (assumed to be located within 
'data_directory'):
K1K_COSEBIs_2cosmos.data_file = 'twoPoint_En_nModes20.fits'

## COSEBIs PARAMETERS ##

# set the (angular) theta-range for integration to COSEBIs:
K1K_COSEBIs_2cosmos.theta_min = 0.50
K1K_COSEBIs_2cosmos.theta_max = 300.0

# set the number of COSEBIs bins for the theory calculation:
K1K_COSEBIs_2cosmos.nbins = 5

## SAVE THEORY VECTOR ##

# write out the E_n theory vector (including all calibrations) in the same
# format as the legacy data vector
# you might want to increase 'nbins' for a higher resolution 
K1K_COSEBIs_2cosmos.write_out_theory = False
# provide prefix for file to which we will attach 'comb', 'cosmo1' and 'cosmo2':
K1K_COSEBIs_2cosmos.theory_file_prefix = 'En_theory_KV450'
# the likelihood will terminate after writing out the vector. Hence, for an 
# MCMC run this flag needs to be set to False!

## REDSHIFT DISTRIBUTIONS ##

# number of discrete z-values used for all integrations, can be set to arbitrary numbers now
K1K_COSEBIs_2cosmos.nzmax = 500

# you can choose here any of the scipy.interpolate.interp1d types of interpolation
# (i.e. 'linear', 'nearest', 'zero', 'slinear', 'quadratic', 'cubic', 'previous',
# 'next' in SciPy v1.1.0) for the n(z) interpolation ('linear' is recommended)
# for fiducial KV450 analysis: 'linear'
K1K_COSEBIs_2cosmos.type_redshift_interp = 'slinear'

## SCALE CUTS ##

# set up the scale cuts to use in the following lines to construct two mutually
# exclusive subsets, i.e. set1 & set2:
# we keep COSEBIs 1 to 5 in data set1:
K1K_COSEBIs_2cosmos.keep_ang_En1 = '0.5 5.5'
# we keep all tomo pairs in data set1 except for the following ones:
K1K_COSEBIs_2cosmos.cut_pair_En1 = '1+5 2+5 3+5 4+5 5+5'
# we keep COSEBIs 1 to 5 in data set2:
K1K_COSEBIs_2cosmos.keep_ang_En2 = '0.5 5.5'
# we keep only tomo pairs of z-bin5 in data set2 and cut out all others:
K1K_COSEBIs_2cosmos.cut_pair_En2 = '1+1 1+2 1+3 1+4 2+2 2+3 2+4 3+3 3+4 4+4'

## PRECISION SETTINGS ##

# these settings set the precision for the Cl integration
# minimum l for C_l
K1K_COSEBIs_2cosmos.ell_min = 1.
# maximum l for C_l
K1K_COSEBIs_2cosmos.ell_max = 2.5e5
# number of (log-spaced) ell-nodes between ell_min and ell_max
K1K_COSEBIs_2cosmos.nells = 200
# if you want to write-out the Cls:
K1K_COSEBIs_2cosmos.write_out_Cls = False

## METHOD FOR NON-LINEAR CORRECTIONS ##

# choose the method for calculation of non-linear corrections, any CLASS keyword
# is possible, but the default choices are
# 1) 'halofit' (including Takahashi's update) and
# 2) 'hmcode' (Mead et al. 2015, 2016)
# the choice between the two affects also the choice of the baryon feedback
# modelling further below!
# for fiducial KV450 analysis: 'hmcode'
K1K_COSEBIs_2cosmos.method_non_linear_Pk = 'hmcode'
#K1K_COSEBIs_2cosmos.method_non_linear_Pk = 'halofit'

# scale k_max (in h/Mpc) up to which the non-linear corrections (of the matter
# power spectrum) are used/trusted (set to zero for k > k_max):
K1K_COSEBIs_2cosmos.k_max_h_by_Mpc = 500.

### NUISANCE PARAMETERS ###

## BARYON FEEDBACK ##

# 1) HALOFIT:
# the options below are only valid if 'method_non_linear_Pk' = 'halofit'!
# choose a baryonic feedback model (from OWLS): 'REF', 'AGN', 'DBLIM'
#K1K_COSEBIs_2cosmos.baryon_model = 'AGN'
# this allows to marginalize over a free baryon feedback amplitude A_bary:
# (i.e. it is simply modifying the amplitude set by the chosen model)
#K1K_COSEBIs_2cosmos.use_nuisance = ['A_bary']

# 2) HMCode:
# the options below are only valid if 'method_non_linear_Pk' = 'hmcode'!
# in order to marginalize over the baryon feedback parameters in HMcode define:
# 1) either 'c_min' only or 'eta_0' only as 'cosmo' parameter in your param-file
#    (the other value will be inferred and fixed)
# 2) or 'c_min' and 'eta_0' as 'cosmo' parameter in your param-file
# DON'T include 'c_min' and 'eta_0' in 'use_nuisance'!

## INTRINSIC ALIGNMENTS (IA) ##

# this allows to include IA:
# if only 'A_IA' is passed, 'exp_IA' = 0 (i.e. redshift-scaling is turned off!)
#K1K_COSEBIs_2cosmos.use_nuisance = ['A_IA', 'exp_IA']
#K1K_COSEBIs_2cosmos.use_nuisance = ['A_IA']
# if this flag is set to True, the linear matter power spectrum will be used for
# the II term in the intrinsic alignment model and for the GI term the geometric
# mean of the linear and non-linear matter power spectre will be used
# if set to False, the non-linear matter power spectrum will be used for both
# the II and GI term instead
# for fiducial KV450 analysis: False
K1K_COSEBIs_2cosmos.use_linear_pk_for_IA = False

## SHIFTS OF N(Z) ##

# nuisance parameters for marginalizing over a constant shift in any of the n(z):
#K1K_COSEBIs_2cosmos.use_nuisance = ['D_z1', 'D_z2', 'D_z3', 'D_z4', 'D_z5']

# supply name of D_z<i>_1/2 shift correlation matrices (optional, but if 
# existent assumed to be located within 'data_directory'):
# NOTE: if filename is not supplied or file cannot be loaded, we assume NO 
# correlations between the D_z<i>_1/2 shift parameters!
K1K_COSEBIs.filename_corrmat_D_z_1 = 'DIR_cov.asc'
K1K_COSEBIs.filename_corrmat_D_z_2 = 'DIR_cov.asc'

## FULL LIST OF ALL NUISANCES ##

# combine all nuisance parameters in one list for marginalization:
K1K_COSEBIs_2cosmos.use_nuisance = ['A_IA_1', 'A_IA_2']

### GAUSSIAN PRIORS (FOR NUISANCES) ###

# if you want to enforce Gaussian priors on some/all NUISANCE parameters, set flag to True
# if set to False lists below are ignored!
K1K_COSEBIs_2cosmos.use_gaussian_prior_for_nuisance = False

# add here all NUISANCE parameters for which you would like to define Gaussian priors:
# names must match exactly to the nusiances defined above!
K1K_COSEBIs_2cosmos.gaussian_prior_name = ['Ac_1', 'Ac_2']

# supply here the central values of the Gaussians (keep the order! no double checks!!!)
# for fiducial KV450 analysis: [0., 1.01, 0., 0., 0., 0., 0.]
K1K_COSEBIs_2cosmos.gaussian_prior_center = [1.01, 1.01]

# supply here the std wrt. the center (again keep the order!)
# for fiducial KV450 analysis: [0.0002, 0.13, 0.039, 0.023, 0.026, 0.012, 0.011]
K1K_COSEBIs_2cosmos.gaussian_prior_sigma = [0.13, 0.13]
