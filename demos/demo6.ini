[runtime]
; The test sampler just runs a single parameter set
sampler = test

[test]
save_dir=demo6
fatal_errors=T
;If you have the python package "pygraphviz" installed you can 
;generate a graphical representation of your pipeline by
;uncommenting this:
;graph=graph.dot
;and afterwards running the command:
; dot -Tpng -o graph.png graph.dot

; The pipeline section contains information
; that describes the sequence of calculations
; to be done and what we want out at the end
[pipeline]
; The list of modules to be run, in this order.
; The modules named here must appear as sections below
modules = consistency camb halofit extrapolate_power load_nz  shear_shear 2pt cfhtlens
values = demos/values6.ini

likelihoods = cfhtlens
extra_output = 

; We can get a little more output during the run by setting some values
quiet=F
timing=T
debug=T

[consistency]
file = cosmosis-standard-library/utility/consistency/consistency_interface.py

[photoz_bias]
file = cosmosis-standard-library/number_density/photoz_bias/photoz_bias.py
mode=additive
sample=nz_sample


[camb]
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=all
lmax=2500
feedback=0

[halofit]
file = cosmosis-standard-library/boltzmann/halofit/halofit_module.so

[extrapolate_power]
file=cosmosis-standard-library/boltzmann/extrapolate/extrapolate_power.py
kmax=500.0

; This is an example of a very simple module - it simple loads in 
; a file once at the start when setting up and supplies fixed data
; when executed.

[load_nz]
file = cosmosis-standard-library/number_density/load_nz_fits/load_nz_fits.py
nz_file = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/cfhtlens/cfhtlens_heymans13.fits
data_sets=SAMPLE


[shear_shear]
file = cosmosis-standard-library/structure/projection/project_2d.py
ell_min = 20.0
ell_max = 10000.0
n_ell = 220
shear-shear = sample-sample 
verbose = T

;This Nicaea code converts C_ell into xi(theta).
;It is fast and accurate but requires a high ell_max, as shown above
[2pt]
file = cosmosis-standard-library/shear/cl_to_xi_nicaea/nicaea_interface.so

[cfhtlens]
file = cosmosis-standard-library/likelihood/2pt/2pt_like.py
data_file=${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/cfhtlens/cfhtlens_heymans13.fits
gaussian_covariance=F
covmat_name=COVMAT
covariance_realizations = 1656
like_name=cfhtlens

;data_sets=all
data_sets = xi_plus xi_minus

angle_range_xi_plus_1_1 = 2.0  999999.0
angle_range_xi_plus_1_2 = 2.0  999999.0
angle_range_xi_plus_1_3 = 2.0  999999.0
angle_range_xi_plus_1_4 = 2.0  999999.0
angle_range_xi_plus_1_5 = 2.0  999999.0
angle_range_xi_plus_1_6 = 2.0  999999.0
angle_range_xi_plus_2_2 = 2.0  999999.0
angle_range_xi_plus_2_3 = 2.0  999999.0
angle_range_xi_plus_2_4 = 2.0  999999.0
angle_range_xi_plus_2_5 = 2.0  999999.0
angle_range_xi_plus_2_6 = 2.0  999999.0
angle_range_xi_plus_3_3 = 2.0  999999.0
angle_range_xi_plus_3_4 = 2.0  999999.0
angle_range_xi_plus_3_5 = 2.0  999999.0
angle_range_xi_plus_3_6 = 2.0  999999.0
angle_range_xi_plus_4_4 = 2.0  999999.0
angle_range_xi_plus_4_5 = 2.0  999999.0
angle_range_xi_plus_4_6 = 2.0  999999.0
angle_range_xi_plus_5_5 = 2.0  999999.0
angle_range_xi_plus_5_6 = 2.0  999999.0
angle_range_xi_plus_6_6 = 2.0  999999.0


angle_range_xi_minus_1_1 = 2.0  999999.0
angle_range_xi_minus_1_2 = 2.0  999999.0
angle_range_xi_minus_1_3 = 2.0  999999.0
angle_range_xi_minus_1_4 = 2.0  999999.0
angle_range_xi_minus_1_5 = 2.0  999999.0
angle_range_xi_minus_1_6 = 2.0  999999.0
angle_range_xi_minus_2_2 = 2.0  999999.0
angle_range_xi_minus_2_3 = 2.0  999999.0
angle_range_xi_minus_2_4 = 2.0  999999.0
angle_range_xi_minus_2_5 = 2.0  999999.0
angle_range_xi_minus_2_6 = 2.0  999999.0
angle_range_xi_minus_3_3 = 2.0  999999.0
angle_range_xi_minus_3_4 = 2.0  999999.0
angle_range_xi_minus_3_5 = 2.0  999999.0
angle_range_xi_minus_3_6 = 2.0  999999.0
angle_range_xi_minus_4_4 = 2.0  999999.0
angle_range_xi_minus_4_5 = 2.0  999999.0
angle_range_xi_minus_4_6 = 2.0  999999.0
angle_range_xi_minus_5_5 = 2.0  999999.0
angle_range_xi_minus_5_6 = 2.0  999999.0
angle_range_xi_minus_6_6 = 2.0  999999.0

