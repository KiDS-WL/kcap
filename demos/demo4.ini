[runtime]
sampler = maxlike

[maxlike]
maxiter = 1000
tolerance = 0.01
output_ini = demo4_output.ini

[output]
filename = demo4.txt
format = text
verbosity= debug

[pipeline]
modules = consistency camb planck
values = demos/values4.ini
extra_output =

; We are now asking for some likelihoods
; at the end of the pipeline.  When doing
; MCMC this line specified the likelihoods to use
; for the acceptance.  Otherwise it just gets
; printed out
likelihoods = planck2015

[planck]
file = cosmosis-standard-library/likelihood/planck2015/planck_interface.so
; The Planck module has some file paths it needs setting
; These files can all be downloaded from the Planck archives
data_1 = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/planck2015/data/plik_lite_v18_TT.clik
data_2 = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/planck2015/data/commander_rc2_v1.1_l2_29_B.clik
; You can also add more here


; Planck is the same as before, except we tell it to include tensors
; In fact because we are specifing r_T in the values2.ini file they
; would be included anyway, but it is good practice to include them here
[camb]
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=cmb
lmax=2650
feedback=0
do_tensors=F
do_lensing=T
do_nonlinear=F
high_ell_template=cosmosis-standard-library/boltzmann/camb/camb_Jan15/HighLExtrapTemplate_lenspotentialCls.dat
accuracy_boost=1.1       ;CAMB accuracy boost parameter
high_accuracy_default=T  ;CAMB accuracy parameter
; default values for the power spectrum grid are too high for this demo
zmin = 0.0	  ;min value to save P(k,z)
zmax = 0.1    ;max value to save P(k,z) 
nz = 2        ;number of z values to save P(k,z), min nz = 2 

; The consistency module translates between our chosen parameterization
; and any other that modules in the pipeline may want (e.g. camb)
[consistency]
file = cosmosis-standard-library/utility/consistency/consistency_interface.py
