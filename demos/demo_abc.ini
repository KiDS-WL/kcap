[runtime]
; The test sampler just runs a single parameter set
sampler = abc
root = ${COSMOSIS_SRC_DIR}

[abc]
;For a given set of parameters the ABC
;sampler needs a simulated data set to be returned 
;by the abc module in the pipeline.
;npart particles are generated every iteration
;with a proposal kernal particle_prop, the distance tolerance
;is determined by threshold from epimax
;to epimin over niter iterations
;A demo setting is to run_multigauss=True for an ngauss dimensional multigaussian.
npart = 200
threshold = ExpEps
epimax= 2.0
epimin = .5
niter=5
particle_prop = KNN
num_nn = 20
set_prior = gauss
run_multigauss = True
ngauss = 4

[output]
filename = demo_abc.txt
format = text
verbosity= debug

[test]
; These are the parameters for this sampler.
; In this case there is just one parameter
save_dir=demo_output_1

; If something goes wrong this will aid diagnosis
fatal_errors=T

; The pipeline section contains information
; that describes the sequence of calculations
; to be done and what we want out at the end
[pipeline]
; The list of modules to be run, in this order.
; The modules named here must appear as sections below
modules = abc_multigauss
; The file to get cosmological and nuisance parameters
; from.
values = demos/values_abc.ini
; Not used here, becuase we are not sampling
likelihoods = abc_multigauss
extra_output = 
;ABC sampler runs the pipeline many times over before parameters 
;are accepted, best to set quiet = T 
quiet=T
debug=F
timing=F

; The consistency module translates between our chosen parameterization
; and any other that modules in the pipeline may want (e.g. camb)
[consistency]
file = cosmosis-standard-library/utility/consistency/consistency_interface.py

; A module!  Camb, set to a mode where it does
; background evolution, CMB, and matter power
[abc_multigauss]
file =  cosmosis-standard-library/ABC_modules/multigauss/gaussian.py 
ngauss = 4
