[runtime]
sampler = test

[test]
save_dir=demo_output_2
fatal_errors=T

[pipeline]
modules = consistency camb planck bicep2
values = demos/values2.ini

; We are now asking for some likelihoods
; at the end of the pipeline.  When doing
; MCMC this line specified the likelihoods to use
; for the acceptance.  Otherwise it just gets
; printed out
likelihoods = planck2015
quiet=F
debug=T
timing=F

; We have two different likelihoods now - Planck 2015 and BICEP2.
[bicep2]
file = cosmosis-standard-library/likelihood/bicep2/bicep_interface.py

[planck]
file = cosmosis-standard-library/likelihood/planck2015/planck_interface.so
; The Planck module has some file paths it needs setting
; These files can all be downloaded from the Planck archives
data_1 = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/planck2015/data/plik_lite_v18_TT.clik
data_2 = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/planck2015/data/commander_rc2_v1.1_l2_29_B.clik
; You can also add more here
; and lensing files can be included with, e.g.:
;lensing_1 = /path/to/wherever/you/downloaded/data/smica_g30_ftl_full_pttptt.clik_lensing


; The consistency module translates between our chosen parameterization
; and any other that modules in the pipeline may want (e.g. camb)
[consistency]
file = cosmosis-standard-library/utility/consistency/consistency_interface.py

; Planck is the same as before, except we tell it to include tensors
; In fact because we are specifing r_T in the values2.ini file they
; would be included anyway, but it is good practice to include them here
[camb]
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=all
lmax=2650
feedback=2
do_tensors=T
do_lensing=T
do_nonlinear=T
high_ell_template=cosmosis-standard-library/boltzmann/camb/camb_Jan15/HighLExtrapTemplate_lenspotentialCls.dat
; because we will be using the Planck likelihood we also need to set the
; accuracy to higher values. This makes a big difference to the likelihood values (delta log L ~ 36)
accuracy_boost=1.1  ;CAMB accuracy boost parameter
high_accuracy_default=T
; default values for the power spectrum grid are too high for this demo
zmin = 0.0	  ;min value to save P(k,z)
zmax = 0.1    ;max value to save P(k,z) 
nz = 2        ;number of z values to save P(k,z), min nz = 2 

