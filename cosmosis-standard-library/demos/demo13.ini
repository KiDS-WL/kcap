[runtime]
; The snake sampler, from Mikkelsen et al
;http://arxiv.org/pdf/1211.3126.pdf

;Snake offers all the advantages of grid sampling
;with much better scaling with number of parameters

;You can also stop a snake sampler part way through and
;it's still useful

sampler = snake


[snake]
; Snake tries to explore at most 5 log-like points away from the peak
threshold = 5.0
;But in this case it's first stopped by this criterion
;on the max number of snake iterations (which yields about 10000
;samples in this particular case if MPI is not used)
maxiter = 10000
;This is the same parameter as in grid sampling - the number
;of grid points in each dimension
nsample_dimension = 20

[output]
filename = demo13.txt
format = text
verbosity= debug

[pipeline]
; We use two likelihoods, the JLA (for high redshift) and
; Riess 2011 to anchor H0, which is otherwise degenerate
; with the nuisance parameter M
modules = consistency camb jla riess11
values = demos/values13.ini
extra_output = likelihoods/jla_like
likelihoods = jla riess
quiet=T
debug=F
timing=F

[consistency]
file = cosmosis-standard-library/utility/consistency/consistency_interface.py



[camb]
; For background-only data we do not need a full
; Boltzmann evaluation, just D(z), etc.
; Setting mode=background means we get this.
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=background
feedback=0

[jla]
; JLA needs quite a lot of parameters telling it where
; data files are ...
file = cosmosis-standard-library/supernovae/jla_v3/jla.so
data_dir = cosmosis-standard-library/supernovae/jla_v3/data
data_file = jla_lcparams.txt
scriptmcut = 10.0
mag_covmat_file = jla_v0_covmatrix.dat
stretch_covmat_file = jla_va_covmatrix.dat
colour_covmat_file = jla_vb_covmatrix.dat
mag_stretch_covmat_file = jla_v0a_covmatrix.dat
mag_colour_covmat_file = jla_v0b_covmatrix.dat
stretch_colour_covmat_file = jla_vab_covmatrix.dat

[riess11]
file = cosmosis-standard-library/likelihood/riess11/riess11.py
