[runtime]
;change to sampler = multinest to do MCMC with multinest.
;This mode just makes gets one posterior and saves
;spectra and other cosmo information to des_sv_output
sampler = fisher
root = ${COSMOSIS_SRC_DIR}

[output]
format=text
filename=demo17.txt

;***********************************
;Samplers
;***********************************

; This is the one we are using right now.
; to switch to one of the others, change the sampler at the top.
[fisher]
step_size = 0.02

[emcee]
walkers = 32
samples = 20
nsteps = 2


[test]
save_dir=demo17
fatal_errors=T

[multinest]
max_iterations=50000
live_points=800
tolerance=0.5
efficiency=0.8
multinest_outfile_root=

;***********************************
;Samplers
;***********************************


[pipeline]
; the main pipeline. It's a sequence of modules to run.
modules = consistency camb sigma8_rescale halofit extrapolate load_nz  photoz_bias  nonlinear_linear_alignment  shear_shear add_intrinsic shear_m_bias 2pt 2pt_like

; the steps are:
; 1) consistency: calculate the simply derived cosmological parameters (e.g. omega_c = omega_m-omega_b)
; 2) camb: run the Boltzmann code to get the matter power spectrum
; 3) sigma8_rescale: rescale the camb outputs so we can sample in sigma_8 instead
; 4) halofit: get the nonlinear matter power spectrum 
; 5) extrapolate: extend the power spectra to high k
; 6) load_nz: get the photometric n(z) for DES-SV data
; 7) photoz_bias: apply the bias parameters for the photo-z to estimate the underlying model n(z) 
; 8) nonlinear_linear_alignment: use the NLA model to get intrinsic alignment 3D power spectra 
; 9) shear_shear: convert the 3D spectra into 2D tomographic C_ell with the Limber approximation
; 10) add_intrinsic: combine the intrinsic and shear terms together into the total observable C_ell
; 11) shear_m_bias: apply the shear measurement bias to predict the measured C_ell 
; 12) 2pt: integrate with Bessel functions to convert Fourier space C_ell into real space xi(theta)
; 13) 2pt_like: get the likelihood of the predicted xi(theta) values


; initial parameter values and their ranges and priors
values = demos/values17.ini
priors = demos/priors17.ini

; extra (derived) parameter to save
;extra_output=cosmological_parameters/a_s

; If you want to combine with additional likelihoods such as Planck;
; then you will need to add them here, e.g.  likelihoods = xipm planck euclid lsst
likelihoods = des_sv

;Control of extra info printed out
quiet=F
timing=T
debug=F


[DEFAULT]
;You probably want to leave this alone.
sv_data_dir = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/des_sv/

; You can switch this to im3shape_3z to see the effects of an alternative shear code
dataset_choice=ngmix_3z

; Can change this to annz, bpz, tpz to see effects of alternative photo-z code
; from the default which is skynet.
; This requires that dataset_choice above be ngmix_3z, because we have not packaged
; the other photo-z n(z) for the other shear variants
photoz_choice=skynet


;
; The rest of this file describes modules that can go into the list
; in the [pipeline] section above under modules = 
; We do not use all of them in this particular version
;



;***********************************
;Theory
;***********************************




[consistency]
file = cosmosis-standard-library/utility/consistency/consistency_interface.py


[camb]
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=all
lmax=2500
feedback=0

[sigma8_rescale]
file = cosmosis-standard-library/utility/sample_sigma8/sigma8_rescale.py

[halofit]
file = cosmosis-standard-library/boltzmann/halofit_takahashi/halofit_interface.so


[extrapolate]
file = cosmosis-standard-library/boltzmann/extrapolate/extrapolate_power.py 
kmax = 500.

;***********************************
; Choice of photometric redshift
;***********************************   
; [load_nz]
; file = cosmosis-standard-library/number_density/load_nz/load_nz.py
; filepath = cosmosis-standard-library/likelihood/des_sv/%(dataset_choice)s/%(photoz_choice)s.txt
; des_fmt = %(des_format)s

[load_nz]
file = cosmosis-standard-library/number_density/load_nz_fits/load_nz_fits.py
nz_file = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/des_sv/%(dataset_choice)s.fits
data_sets=%(photoz_choice)s
prefix_extension=T
prefix_section=T
; This is complicated, and it matters for high precision comparisons.
upsampling = 2

[photoz_bias]
file = cosmosis-standard-library/number_density/photoz_bias/photoz_bias.py
mode = additive
sample = nz_%(photoz_choice)s
bias_section = wl_photoz_errors

[nonlinear_linear_alignment]
file = cosmosis-standard-library/intrinsic_alignments/la_model/linear_alignments_interface.py
method = bk_corrected


[shear_m_bias]
file = cosmosis-standard-library/shear/shear_bias/shear_m_bias.py
m_per_bin = True




;***********************************
;likelihoods
;***********************************


[2pt_like]
file = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/2pt/2pt_like.py
data_file=${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/des_sv/%(dataset_choice)s.fits
gaussian_covariance=F
covmat_name=COVMAT
covariance_realizations = 126
like_name=des_sv
data_sets = xi_plus xi_minus

; You can add the Sellentin-Heavens correction for MC cov mat estimation
; by setting this to True (see arxiv 1511.05969)
sellentin=F


angle_range_xi_plus_1_1 = 4.0  60.0
angle_range_xi_plus_1_2 = 4.0  60.0
angle_range_xi_plus_1_3 = 4.0  60.0
angle_range_xi_plus_2_2 = 4.0  60.0
angle_range_xi_plus_2_3 = 2.0  60.0
angle_range_xi_plus_3_3 = 2.0  60.0

angle_range_xi_minus_1_1 = 60.0  9999.0
angle_range_xi_minus_1_2 = 60.0  9999.0
angle_range_xi_minus_1_3 = 30.0  9999.0
angle_range_xi_minus_2_2 = 30.0  9999.0
angle_range_xi_minus_2_3 = 30.0  9999.0
angle_range_xi_minus_3_3 = 30.0  9999.0

; Replace with these lines to use much weaker scale cuts:

; angle_range_xi_plus_1_1 = 0.0  60.0
; angle_range_xi_plus_1_2 = 0.0  60.0
; angle_range_xi_plus_1_3 = 0.0  60.0
; angle_range_xi_plus_2_2 = 0.0  60.0
; angle_range_xi_plus_2_3 = 0.0  60.0
; angle_range_xi_plus_3_3 = 0.0  60.0

; angle_range_xi_minus_1_1 = 0.0  9999.0
; angle_range_xi_minus_1_2 = 0.0  9999.0
; angle_range_xi_minus_1_3 = 0.0  9999.0
; angle_range_xi_minus_2_2 = 0.0  9999.0
; angle_range_xi_minus_2_3 = 0.0  9999.0
; angle_range_xi_minus_3_3 = 0.0  9999.0



[camb_bg]
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=thermal
lmax=2500
feedback=0

[coyote]
file=cosmosis-standard-library/structure/FrankenEmu/interface.so
dz=0.01
nz=400
do_distances=F

[growthfunction]
;the linear growth rate and function will be calculated at given redshift. Arrays of D(z), f(z),z from z=100 to 0 are also output.
file = cosmosis-standard-library/structure/growth_factor/interface.so
zmin = 0.0
zmax = 0.6
dz = 0.01


[extrapolate_coyote]
; This is a slightly different extrapolation scheme suitable for non-linear power
; from the Coyote universe emulator
file=cosmosis-standard-library-library/structure/extrapolate_nonlinear/extrapolate_nonlinear.py
kmin=1.e-5
kmax=500.



[shear_shear]
file = cosmosis-standard-library/structure/projection/project_2d.py
ell_min = 0.1
ell_max = 200000.0
n_ell = 400
shear-shear = %(photoz_choice)s-%(photoz_choice)s
intrinsic-intrinsic = %(photoz_choice)s-%(photoz_choice)s
shear-intrinsic = %(photoz_choice)s-%(photoz_choice)s
verbose = T


[shear_shear_noIA]
file = cosmosis-standard-library/shear/spectra/interface.so
ell_min = 0.1
ell_max = 200000.0
n_ell = 400
intrinsic_alignments = F

[2pt]
file = cosmosis-standard-library/shear/cl_to_xi_nicaea/nicaea_interface.so

;***********************************
;Intrinsic alignments
;***********************************

[add_intrinsic]
file=cosmosis-standard-library/shear/add_intrinsic/add_intrinsic.py
position-shear=F

; Can be used to add redshift-dependence to the IAs
[ia_z_field]
file=cosmosis-standard-library/intrinsic_alignments/z_powerlaw/ia_z_powerlaw.py


;***********************************
;non-astro systematic
;********

; Variant without tomography:
[xipm_1z]
file = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/shear_xi/xipm_like_interface.py
covariance_file = %(sv_data_dir)s/%(dataset_choice)s/Cov.npy
data_file = %(sv_data_dir)s/%(dataset_choice)s/xis.txt
cov_num_rlzn = 126
n_z_bins=1
theta_mins = [3.,60.]
theta_maxs = [60.,9999.]
; Replace with these lines to use much weaker scale cuts:
;theta_mins = [0.,0.]
;theta_maxs = [60.,999.]


;fsigma8 data from Chuang et al 2013 BOSS DR9 at z=0.57
[boss_fsigma8]
file = cosmosis-standard-library/likelihood/boss/boss_rsd.py
feedback = 0
mode=0

;Riess 11 Supernovae as modified by Efstathiou.
[efstathiou_h0]
file = cosmosis-standard-library/likelihood/riess11/riess11.py
; Remove or modify these lines to get the original Riess SNe back:
mean = 0.706
sigma = 0.033


; This is only needed if you are doing multiple xipm likelihoods
; and need to delete all the extra sections.  It's a workaround
; for the fact that we cannot yet have branching pipelines in 
; cosmosis
[refresh_des]
file = cosmosis-standard-library/likelihood/des_sv/refresh_des.py



