;***********************************
;multinest is the default sampler
;***********************************
[runtime]
sampler = test
root = ${COSMOSIS_SRC_DIR}

[DEFAULT]
BASELINE_DIR=
2PT_FILE = 2pt_NG.fits
2PT_DATA_SETS = xip xim gammat wtheta
RUN_NAME = limber_test
planck_like_path=${COSMOSIS_SRC_DIR}/cosmosis-des-library/external/planck

[campaign]
;text="Baseline cosmosis internal simulation run"
;launcher=stacpolly
; Allow long five-hour jobs
time_hours = 120


; You can create an internal_simulation file by:
;  - under [pipeline], change modules to the commented out line including save_c_ell_fits
;  - Running cosmosis params.ini   (This will generate internal_simulation.fits)
;
;  Then to use the file instead of des_multiprobe_v1.10.fits:
;  - under [pipeline] change modules back to its old value (without save_c_ell_fits)
;  - comment out the 2PT_FILE and 2PT_DATA_SETS above and uncomment the ones below
;  - run cosmosis params.ini
; 2PT_FILE = internal_simulation.fits
; 2PT_DATA_SETS = galaxy_cl shear_cl shear_galaxy_cl

[pmaxlike]
maxiter = 10000
tolerance = 0.1
output_ini = best_fit.ini

;New sampler I added to draw our star through parameter space
[star]
nsample_dimension = 100


[minuit]
maxiter=5000
strategy=medium
algorithm=fallback
tolerance=1000
output_ini=ml_results.ini
save_dir=ml_results
save_cov=cov.txt
verbose=T

[multinest]
;wrapped_params = cosmological_parameters--omega_b   cosmological_parameters--h0
max_iterations=50000
multinest_outfile_root=mn_%(RUN_NAME)s
resume=F
; from Joe:- For a quick run:
;live_points=250
;efficiency=0.8
;tolerance=0.1
;constant_efficiency=F
;    ~ 140k evaluations
;    ~ 9k independent samples
;    Few enough samples that the plots will be too scrappy to use in publications. 
;    Estimated mean and covmat will still be good to a few percent
;    Evidence will be a bit off compared to other estimates.
;- Suggested standard run:
;live_points=500
;efficiency=0.3
;tolerance=0.1
;constant_efficiency=F
;    ~ 350k evaluations
;    ~ 20k independent samples
;    Plots should be fine with some small smoothing or Schuhman's transformation.
;    Reasonable evidence
;- A mega-run:
live_points=1000
efficiency=0.05
tolerance=0.1   
constant_efficiency=T
;    ~ 1M evaluations
;    ~ 40k independent samples
;    Switching on constant_efficiency speeds up from ~1M samples to ~600k
;    Should only need one or two of these for comparison.

[test]
; These are the parameters for this sampler.
; In this case there is just one parameter
save_dir=test_output_%(RUN_NAME)s
fatal_errors=T

[output]
filename=%(RUN_NAME)s_chain.txt
format=text

[grid]
nsample_dimension = 10
save_dir=grid_output

[emcee]
; The emcee sampler uses the concept of walkers, a collection
; ; of live points.  Sampling is done along lines that connect
; ; pairs of walkers.  The number of walkers must be at least
; ; 2*nparam + 1, but in general more than that usually works
; ; better.
burn=0.3
walkers = 160
; ; This many samples is overkill, just to make the plots
; ; look a lot nicer
samples = 10000
;;1000000
; ; This is the interval at which convergence diagnostics
; ; are performed
nsteps = 5
;


; The pipeline section contains information
; that describes the sequence of calculations
; to be done and what we want out at the end
; Here we just specify the priors, since modules and values will be specific to each chain
[pipeline]
quiet=T
timing=F
debug=F
priors = %(BASELINE_DIR)s/priors.ini
modules = consistency camb halofit growth extrapolate fits_nz lens_photoz_bias source_photoz_bias unbiased_galaxies bias_neutrinos  multiply_pk IA ia_z_field pk_to_cl bin_bias add_intrinsic shear_m_bias 2pt_gal 2pt_gal_shear 2pt_shear save_2pt
;modules = consistency camb halofit growth extrapolate fits_nz lens_photoz_bias source_photoz_bias unbiased_galaxies  IA ia_z_field pk_to_cl bin_bias add_intrinsic shear_m_bias 2pt_gal 2pt_gal_shear 2pt_shear save_2pt
values = values_y1.ini
likelihoods = 
extra_output = cosmological_parameters/sigma_8

[2pt_like_allscales]
file = cosmosis-standard-library/likelihood/2pt/2pt_like.py
include_norm=T
data_file = %(2PT_FILE)s
data_sets = %(2PT_DATA_SETS)s
;save_plots_to = buzzard_plots
make_covariance=F
covmat_name=COVMAT

[2pt_like]
file = cosmosis-standard-library/likelihood/2pt/2pt_like.py
;cosmosis-des-library/tcp/2pt_like/2pt_like.py
include_norm=T
data_file = %(2PT_FILE)s
data_sets = %(2PT_DATA_SETS)s
;save_plots_to = buzzard_plots
make_covariance=F
covmat_name=COVMAT

angle_range_xip_1_1 = 7.195005 250.0
angle_range_xip_1_2 = 7.195005 250.0
angle_range_xip_1_3 = 5.715196 250.0
angle_range_xip_1_4 = 5.715196 250.0

angle_range_xip_2_1 = 7.195005 250.0
angle_range_xip_2_2 = 4.539741 250.0
angle_range_xip_2_3 = 4.539741 250.0
angle_range_xip_2_4 = 4.539741 250.0

angle_range_xip_3_1 = 5.715196 250.0
angle_range_xip_3_2 = 4.539741 250.0
angle_range_xip_3_3 = 3.606045 250.0
angle_range_xip_3_4 = 3.606045 250.0

angle_range_xip_4_1 = 5.715196 250.0
angle_range_xip_4_2 = 4.539741 250.0
angle_range_xip_4_3 = 3.606045 250.0
angle_range_xip_4_4 = 3.606045 250.0

angle_range_xim_1_1 = 90.579750 250.0
angle_range_xim_1_2 = 71.950053 250.0
angle_range_xim_1_3 = 71.950053 250.0
angle_range_xim_1_4 = 71.950053 250.0

angle_range_xim_2_1 = 71.950053 250.0
angle_range_xim_2_2 = 57.151958 250.0
angle_range_xim_2_3 = 57.151958 250.0
angle_range_xim_2_4 = 45.397414 250.0

angle_range_xim_3_1 = 71.950053 250.0
angle_range_xim_3_2 = 57.151958 250.0
angle_range_xim_3_3 = 45.397414 250.0
angle_range_xim_3_4 = 45.397414 250.0

angle_range_xim_4_1 = 71.950053 250.0
angle_range_xim_4_2 = 45.397414 250.0
angle_range_xim_4_3 = 45.397414 250.0
angle_range_xim_4_4 = 36.060448 250.0

angle_range_gammat_1_1 = 64.0 250.0
angle_range_gammat_1_2 = 64.0 250.0
angle_range_gammat_1_3 = 64.0 250.0
angle_range_gammat_1_4 = 64.0 250.0
angle_range_gammat_2_1 = 40.0 250.0
angle_range_gammat_2_2 = 40.0 250.0
angle_range_gammat_2_3 = 40.0 250.0
angle_range_gammat_2_4 = 40.0 250.0
angle_range_gammat_3_1 = 30.0 250.0
angle_range_gammat_3_2 = 30.0 250.0
angle_range_gammat_3_3 = 30.0 250.0
angle_range_gammat_3_4 = 30.0 250.0
angle_range_gammat_4_1 = 24.0 250.0
angle_range_gammat_4_2 = 24.0 250.0
angle_range_gammat_4_3 = 24.0 250.0
angle_range_gammat_4_4 = 24.0 250.0
angle_range_gammat_5_1 = 21.0 250.0
angle_range_gammat_5_2 = 21.0 250.0
angle_range_gammat_5_3 = 21.0 250.0
angle_range_gammat_5_4 = 21.0 250.0

angle_range_wtheta_1_1 = 43.0 250.0
angle_range_wtheta_2_2 = 27.0 250.0
angle_range_wtheta_3_3 = 20.0 250.0
angle_range_wtheta_4_4 = 16.0 250.0
angle_range_wtheta_5_5 = 14.0 250.0


[2ptlike_large_scales]
file = cosmosis-standard-library/likelihood/2pt/2pt_like.py
;cosmosis-des-library/tcp/2pt_like/2pt_like.py
data_file = %(2PT_FILE)s
data_sets = %(2PT_DATA_SETS)s
;save_plots_to = buzzard_plots
make_covariance=F
covmat_name=COVMAT

angle_range_xip_1_1 = 20. 250.0
angle_range_xip_1_2 = 20. 250.0
angle_range_xip_1_3 = 20. 250.0
angle_range_xip_1_4 = 20. 250.0

angle_range_xip_2_1 = 20. 250.0
angle_range_xip_2_2 = 20. 250.0
angle_range_xip_2_3 = 20. 250.0
angle_range_xip_2_4 = 20. 250.0

angle_range_xip_3_1 = 20. 250.0
angle_range_xip_3_2 = 20. 250.0
angle_range_xip_3_3 = 20. 250.0
angle_range_xip_3_4 = 20. 250.0

angle_range_xip_4_1 = 20. 250.0
angle_range_xip_4_2 = 20. 250.0
angle_range_xip_4_3 = 20. 250.0
angle_range_xip_4_4 = 20. 250.0



angle_range_xim_1_1 = 150. 250.0
angle_range_xim_1_2 = 150. 250.0
angle_range_xim_1_3 = 150. 250.0
angle_range_xim_1_4 = 150. 250.0

angle_range_xim_2_1 = 150. 250.0
angle_range_xim_2_2 = 150. 250.0
angle_range_xim_2_3 = 150. 250.0
angle_range_xim_2_4 = 150. 250.0

angle_range_xim_3_1 = 150. 250.0
angle_range_xim_3_2 = 150. 250.0
angle_range_xim_3_3 = 150. 250.0
angle_range_xim_3_4 = 150. 250.0

angle_range_xim_4_1 = 150. 250.0
angle_range_xim_4_2 = 150. 250.0
angle_range_xim_4_3 = 150. 250.0
angle_range_xim_4_4 = 150. 250.0

angle_range_gammat_1_1 = 65.0 250.0
angle_range_gammat_1_2 = 65.0 250.0
angle_range_gammat_1_3 = 65.0 250.0
angle_range_gammat_1_4 = 65.0 250.0
angle_range_gammat_1_5 = 65.0 250.0
angle_range_gammat_2_1 = 65.0 250.0
angle_range_gammat_2_2 = 65.0 250.0
angle_range_gammat_2_3 = 65.0 250.0
angle_range_gammat_2_4 = 65.0 250.0
angle_range_gammat_2_5 = 65.0 250.0
angle_range_gammat_3_1 = 65.0 250.0
angle_range_gammat_3_2 = 65.0 250.0
angle_range_gammat_3_3 = 65.0 250.0
angle_range_gammat_3_4 = 65.0 250.0
angle_range_gammat_3_5 = 65.0 250.0
angle_range_gammat_4_1 = 65.0 250.0
angle_range_gammat_4_2 = 65.0 250.0
angle_range_gammat_4_3 = 65.0 250.0
angle_range_gammat_4_4 = 65.0 250.0
angle_range_gammat_4_5 = 65.0 250.0
angle_range_gammat_5_1 = 65.0 250.0
angle_range_gammat_5_2 = 65.0 250.0
angle_range_gammat_5_3 = 65.0 250.0
angle_range_gammat_5_4 = 65.0 250.0
angle_range_gammat_5_5 = 65.0 250.0

angle_range_wtheta_1_1 = 50.0 250.0
angle_range_wtheta_2_2 = 50.0 250.0
angle_range_wtheta_3_3 = 50.0 250.0
angle_range_wtheta_4_4 = 50.0 250.0
angle_range_wtheta_5_5 = 50.0 250.0


[2pt_like_gammat_cut]
file = cosmosis-standard-library/likelihood/2pt/2pt_like.py
;cosmosis-des-library/tcp/2pt_like/2pt_like.py
data_file = %(2PT_FILE)s
data_sets = %(2PT_DATA_SETS)s
;save_plots_to = buzzard_plots
make_covariance=F
covmat_name=COVMAT

cut_gammat = 2,1  3,1  3,2  4,1  4,2  5,1  5,2  5,3

angle_range_xip_1_1 = 7.195005 250.0
angle_range_xip_1_2 = 7.195005 250.0
angle_range_xip_1_3 = 5.715196 250.0
angle_range_xip_1_4 = 5.715196 250.0

angle_range_xip_2_1 = 7.195005 250.0
angle_range_xip_2_2 = 4.539741 250.0
angle_range_xip_2_3 = 4.539741 250.0
angle_range_xip_2_4 = 4.539741 250.0

angle_range_xip_3_1 = 5.715196 250.0
angle_range_xip_3_2 = 4.539741 250.0
angle_range_xip_3_3 = 3.606045 250.0
angle_range_xip_3_4 = 3.606045 250.0

angle_range_xip_4_1 = 5.715196 250.0
angle_range_xip_4_2 = 4.539741 250.0
angle_range_xip_4_3 = 3.606045 250.0
angle_range_xip_4_4 = 3.606045 250.0

angle_range_xim_1_1 = 90.579750 250.0
angle_range_xim_1_2 = 71.950053 250.0
angle_range_xim_1_3 = 71.950053 250.0
angle_range_xim_1_4 = 71.950053 250.0

angle_range_xim_2_1 = 71.950053 250.0
angle_range_xim_2_2 = 57.151958 250.0
angle_range_xim_2_3 = 57.151958 250.0
angle_range_xim_2_4 = 45.397414 250.0

angle_range_xim_3_1 = 71.950053 250.0
angle_range_xim_3_2 = 57.151958 250.0
angle_range_xim_3_3 = 45.397414 250.0
angle_range_xim_3_4 = 45.397414 250.0

angle_range_xim_4_1 = 71.950053 250.0
angle_range_xim_4_2 = 45.397414 250.0
angle_range_xim_4_3 = 45.397414 250.0
angle_range_xim_4_4 = 36.060448 250.0

angle_range_gammat_1_1 = 64.0 250.0
angle_range_gammat_1_2 = 64.0 250.0
angle_range_gammat_1_3 = 64.0 250.0
angle_range_gammat_1_4 = 64.0 250.0
angle_range_gammat_1_5 = 64.0 250.0
angle_range_gammat_2_1 = 40.0 250.0
angle_range_gammat_2_2 = 40.0 250.0
angle_range_gammat_2_3 = 40.0 250.0
angle_range_gammat_2_4 = 40.0 250.0
angle_range_gammat_2_5 = 40.0 250.0
angle_range_gammat_3_1 = 30.0 250.0
angle_range_gammat_3_2 = 30.0 250.0
angle_range_gammat_3_3 = 30.0 250.0
angle_range_gammat_3_4 = 30.0 250.0
angle_range_gammat_3_5 = 30.0 250.0
angle_range_gammat_4_1 = 24.0 250.0
angle_range_gammat_4_2 = 24.0 250.0
angle_range_gammat_4_3 = 24.0 250.0
angle_range_gammat_4_4 = 24.0 250.0
angle_range_gammat_4_5 = 24.0 250.0
angle_range_gammat_5_1 = 21.0 250.0
angle_range_gammat_5_2 = 21.0 250.0
angle_range_gammat_5_3 = 21.0 250.0
angle_range_gammat_5_4 = 21.0 250.0
angle_range_gammat_5_5 = 21.0 250.0

angle_range_wtheta_1_1 = 43.0 250.0
angle_range_wtheta_2_2 = 27.0 250.0
angle_range_wtheta_3_3 = 20.0 250.0
angle_range_wtheta_4_4 = 16.0 250.0
angle_range_wtheta_5_5 = 14.0 250.0



[bias]
file=${COSMOSIS_SRC_DIR}/cosmosis-des-library/tcp/simple_bias/bias.py

[IA]
file=cosmosis-standard-library/intrinsic_alignments/la_model/linear_alignments_interface.py
do_galaxy_intrinsic=T
method=bk_corrected
;file=${COSMOSIS_SRC_DIR}/cosmosis-des-library/IAs/simple_red_blue/simple_red_blue_interface.py
;name_1=red
;name_2=blue

[add_intrinsic]
file=cosmosis-standard-library/shear/add_intrinsic/add_intrinsic.py
shear-shear=T
perbin=F
position-shear=T

[stitch]
; This module combines together the 
file=${COSMOSIS_SRC_DIR}/cosmosis-des-library/IAs/stitch/stitch_ia.py
name_1=red
name_2=blue

[consistency]
file = cosmosis-standard-library/utility/consistency/consistency_interface.py

[camb]
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=all
lmax=2500
feedback=0
kmin=1e-5
kmax=10.0
nk=200


[camb_wmap]
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=all
lmax=1300
feedback=0

[camb_planck]
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=all
lmax=2650
feedback=0
kmin=1e-5
kmax=10.0
nk=200
do_lensing = T
do_tensors = F
do_nonlinear = T
high_ell_template = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/boltzmann/camb/camb_Jan15/HighLExtrapTemplate_lenspotentialCls.dat
accuracy_boost=1.1  
high_accuracy_default = T

[extrapolate]
file = cosmosis-standard-library/boltzmann/extrapolate/extrapolate_power.py 
kmax = 500.

[sigma8_rescale]
file = cosmosis-standard-library/utility/sample_sigma8/sigma8_rescale.py

[halofit]
file = cosmosis-standard-library/boltzmann/halofit_takahashi/halofit_interface.so
nk=700

[unbiased_galaxies]
file = cosmosis-standard-library/bias/no_bias/no_bias.py

; This module uses the Limber approximation to compute shear-shear C_ell
; given the shear kernel (which is derived from the number density and 
; from geometry)

[pk_to_cl]
file = cosmosis-standard-library/structure/projection/project_2d.py
ell_min = 0.1
ell_max = 5.0e5
n_ell = 400
position-shear = lens-source
shear-shear = source-source
position-position = lens-lens
intrinsic-intrinsic = source-source
shear-intrinsic = source-source
position-intrinsic = lens-source
verbose = F
get_kernel_peaks=F
limber_abs_tol=0.
do_extended_limber=F


[save_2pt]
file = cosmosis-standard-library/likelihood/2pt/save_2pt.py
theta_min = 2.5
theta_max = 250.0
n_theta = 20
real_space = T
make_covariance = F
shear_nz_name = nz_source
position_nz_name = nz_lens
filename = simulated_y1_fiducial_v1.fits
clobber = T
number_density_shear_bin =  2.0  2.0  2.0  2.0  2.0
number_density_lss_bin = 2.0  2.0  2.0
sigma_e_bin = 0.2  0.2  0.2  0.2  0.2
survey_area = 1500.0
cut_wtheta = 2,1 3,1 3,2 4,1 4,2 4,3 5,1 5,2 5,3 5,4
prefix_nz_section=False


[ia_z_field]
file = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/intrinsic_alignments/z_powerlaw/ia_z_powerlaw.py
do_galaxy_intrinsic = T

[save_c_ell_fits]
file = cosmosis-des-library/tcp/2pt_like/save_2pt.py
ell_min = 100.0
ell_max = 2000.0
n_ell = 10
shear_nz_name = nz_source
position_nz_name = nz_lens
filename = internal_simulation.fits
clobber = T
number_density_shear_bin =  2.0  2.0  2.0  2.0  2.0
number_density_lss_bin = 2.0  2.0  2.0
sigma_e_bin = 0.2  0.2  0.2  0.2  0.2
survey_area = 1500.0



[bin_bias]
file = cosmosis-standard-library/bias/binwise_bias/bin_bias.py
perbin=T

[load_nz_source]
file=cosmosis-standard-library/number_density/load_nz/load_nz.py
filepath=%(BASELINE_DIR)s/../../comparison/comparison_details_v1/source_4.nz.txt
output_section=nz_source
upsampling=1
histogram=T

[load_nz_lens]
file=cosmosis-standard-library/number_density/load_nz/load_nz.py
output_section=nz_lens
filepath=%(BASELINE_DIR)s/../../comparison/comparison_details_v1/lens_5.nz.txt
upsampling=1
histogram=T

[unbiased_galaxies]
file = cosmosis-standard-library/bias/no_bias/no_bias.py
use_lin_power=False


[fits_nz]
file = cosmosis-standard-library/number_density/load_nz_fits/load_nz_fits.py
nz_file = %(2PT_FILE)s
data_sets = source lens
prefix_section = T
prefix_extension = T


;ell_max = 500.0
;spectra_to_cut= SHEAR_SHEAR GGL  REDMAGIC_CL

[2pt_shear]
file = cosmosis-standard-library/shear/cl_to_xi_nicaea/nicaea_interface.so
;input_section_name = shear_cl
;output_section_name = shear_xi
corr_type = 0

[2pt_gal]
file = cosmosis-standard-library/shear/cl_to_xi_nicaea/nicaea_interface.so
;input_section_name = galaxy_cl
;output_section_name = matter_xi
; Type of Hankel transform and output correlation function
; [0 = shear, 1 = matter, 2 = ggl]
corr_type = 1

[2pt_gal_shear]
file = cosmosis-standard-library/shear/cl_to_xi_nicaea/nicaea_interface.so
;input_section_name = galaxy_shear_cl
;output_section_name = ggl_xi
; Type of Hankel transform and output correlation function
; [0 = shear, 1 = matter, 2 = ggl]
corr_type = 2




[shear_m_bias]
file = cosmosis-standard-library/shear/shear_bias/shear_m_bias.py
m_per_bin = True
verbose = F

[source_photoz_bias]
file = cosmosis-standard-library/number_density/photoz_bias/photoz_bias.py
mode = additive
sample = nz_source
bias_section = wl_photoz_errors
interpolation = linear

[lens_photoz_bias]
file = cosmosis-standard-library/number_density/photoz_bias/photoz_bias.py
mode = additive
sample = nz_lens
bias_section = lens_photoz_errors
interpolation = linear


[growth]
file=cosmosis-standard-library/structure/growth_factor/interface.so
zmin=0.
zmax=4.
nz=401

[extract]
file = ${PWD}/datavector.py
outfile = datavector.txt

[bias_neutrinos]
file=cosmosis-des-library/lss/braganca-neutrino-bias/interface.so
feedback=true
# --------------------------------------------------
# GROWTH FUNCTION
LINEAR_GROWTH_EPS_ABS = 0.0
LINEAR_GROWTH_EPS_REL = 1.0e-6
LINEAR_GROWTH_RK_TYPE = RK45
# LINEAR_GROWTH_SPLINE_ZMIN: ZMIN NEED TO BE ZERO
LINEAR_GROWTH_SPLINE_ZMIN = 0.0
LINEAR_GROWTH_SPLINE_ZMAX = 1.00
LINEAR_GROWTH_SPLINE_DELTA_Z = 0.02
# --------------------------------------------------

[multiply_pk]
file=cosmosis-des-library/lss/braganca-neutrino-bias/bias_pks.py


[planck_tt_highell]
file = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/planck2015/planck_interface.so
;;;;Lite high-ell TT
data_1 = %(planck_like_path)s/hi_l/plik_lite/plik_lite_v18_TT.clik

;;;;Planck likelihood 2015;;;;
[planck]
file = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/planck2015/planck_interface.so
;;;;Lite high-ell TT
data_1 = %(planck_like_path)s/hi_l/plik_lite/plik_lite_v18_TT.clik
;;;;Low-ell  TT,EE, BB and TE likelihood
data_2 = %(planck_like_path)s/low_l/bflike/lowl_SMW_70_dx11d_2014_10_03_v5c_Ap.clik

[planck_lensing]
file = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/planck2015/planck_interface.so
;;;;T and P lensing likelihood
lensing_1 = %(planck_like_path)s/lensing/smica_g30_ftl_full_pttptt.clik_lensing

[planck_all]
file = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/planck2015/planck_interface.so
data_1 = %(planck_like_path)s/hi_l/plik_lite/plik_lite_v18_TT.clik
data_2 = %(planck_like_path)s/low_l/bflike/lowl_SMW_70_dx11d_2014_10_03_v5c_Ap.clik
lensing_1 = %(planck_like_path)s/lensing/smica_g30_ftl_full_pttptt.clik_lensing


;;;;BAO likelihoods;;;;
[boss_dr12]
file = ${COSMOSIS_SRC_DIR}/cosmosis-des-library/external/bao/boss_dr12/boss_dr12.py
;mode = 0: BAO. mode = 1: BAO + FS (measurement of fsig8 included).
mode = 0

[6dfgs]
file = ${COSMOSIS_SRC_DIR}/cosmosis-des-library/external/bao/6dfgs/6dfgs.py
;mode = 0: BAO. mode = 1: measurement of fsig8.
mode = 0

[mgs_bao]
file = ${COSMOSIS_SRC_DIR}/cosmosis-des-library/external/bao/mgs_bao/mgs_bao.py

;;;;SN likelihood;;;;
[jla]
; As from demo5
file = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/supernovae/jla_v3/jla.so
data_dir = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/supernovae/jla_v3/data
data_file = jla_lcparams.txt
scriptmcut = 10.0
mag_covmat_file = jla_v0_covmatrix.dat
stretch_covmat_file = jla_va_covmatrix.dat
colour_covmat_file = jla_vb_covmatrix.dat
mag_stretch_covmat_file = jla_v0a_covmatrix.dat
mag_colour_covmat_file = jla_v0b_covmatrix.dat
stretch_colour_covmat_file = jla_vab_covmatrix.dat

[riess16]
file = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/riess16/riess16.py
