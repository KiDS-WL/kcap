#This is a template for module description files
name: "cosebis"
version: "1"
purpose: "measuring cosebis from an input 2PCFs, predicting En, Bn"
url: ""
interface: libcosebis_2pcfs.so
attribution: [Marika Asgari]
rules:
    ""
cite:
    - "Asgari et al. 2012, 2016, 2018"

assumptions:
    - "The input 2PCFs files need to be in athena format, meaning the first column is theta, the second is xi_+ and the third is xi_-"
    - "The binning in theta needs to be done linearly, with very fine bins, for example: 1.2e6 bins between 0.5'-300' "
    - " make sure there are no bins with zero galaxy pairs in them as that can bias the results. "
    - " the input theta in the first column needs to be in arcminutes"

explanation: |
    "
    "

# List of parameters that can go in the params.ini file in the section for this module    
params:
        theta_min: " minimum angular distance between galaxies, in arcmins"
        theta_max: " maximum angular distance between galaxies, in arcmins"
        n_max: "maximum COSEBIs mode to be calculated: n=1,2,.., n_max"
        input_2pcfs_filename: "Input 2PCFs file, needs to be in Athena format,"
        is_it_bmodes: "If 0 calculates E-modes. If not B-modes. "
        input_2pcfs_filename_start: "should be an integer. Leave empty if there is just one set of measurements. This setting is useful for many mocks"
        input_2pcfs_filename_end: "should be an integer >= input_2pcfs_filename_start. Leave empty if there is just one set of measurements. This setting is useful for many mocks"
        noisy_input: "Is the input a noisy file? then put 1 here. If not use zero. If it is noisy trapezoidal integration is applied, if not Gauss Legendre."
        n_zbins: "Number of redshift bins. If put to zero it just takes the full name of the file from input_2pcfs_filename. 
            If it is a natural number then the interface will expect a series of inputs with this naming convention: 
            str(input_2pcfs_filename)+_nBins_+str(n_zbins)+_Bin+str(i_bin)+_Bin+str(j_bin)
            with i_bin going from 1 to n_zbins and j_bin going from i_bin to n_zbins
            or if there are a number of mocks then this naming convention is expected:
            str(input_2pcfs_filename)+str(iSim)+_nBins_+str(n_zbins)+_Bin+str(i_bin)+_Bin+str(j_bin)
            with iSim going from input_2pcfs_filename_start to input_2pcfs_filename_end"
        number_of_columns_in_input_files: "number of columns in the input 2PCFS files, this will be updated so it is not needed as an input" 
        the first three columns: "theta xi_+ xi_- are important. The rest could be anything."
        CalculateCov: "If zero do nothing. If not calculate the covariance from the set of mocks"
        CovNameSuffix: "Add a suffix to the covariance matrix name. The covariance is named as such:
                str(FolderName)+/CovSimsEn+str(CovNameSuffix)+_nBins_+str(n_zbins)
                            +_nSims+str(nSims)+_+theta_min+ - +theat_max"
        CovarianceFolderName: "Folder name where the covariance and other files are saved"

#Inputs for a given choice of a parameter, from the values.ini or from other modules
#If no such choices, just do one of these omitting mode=something part:
inputs:


outputs:
    COSEBIs: "E/B mode COSEBIs are saved"
