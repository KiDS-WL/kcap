[DEFAULT]
CSL_PATH = .
KCAP_PATH = .
RUN_NAME = test_mn_fixedorder

[runtime]
sampler = test


[multinest]
;wrapped_params = cosmological_parameters--omega_b   cosmological_parameters--h0
max_iterations=50000
multinest_outfile_root=examples/output_kv450_no_sys/multinest_%(RUN_NAME)s_
resume=F
; from Joe:- For a quick run:
live_points=250
efficiency=0.8
tolerance=0.1
constant_efficiency=F
;    ~ 140k evaluations
;    ~ 9k independent samples
;    Few enough samples that the plots will be too scrappy to use in publications. 
;    Estimated mean and covmat will still be good to a few percent
;    Evidence will be a bit off compared to other estimates.
;- Suggested standard run:
;live_points=500
;efficiency=0.3
;tolerance=0.1
;constant_efficiency=F
;    ~ 350k evaluations
;    ~ 20k independent samples
;    Plots should be fine with some small smoothing or Schuhman's transformation.
;    Reasonable evidence
;- A mega-run:
;live_points=1000
;efficiency=0.05
;tolerance=0.1   
;constant_efficiency=T
;    ~ 1M evaluations
;    ~ 40k independent samples
;    Switching on constant_efficiency speeds up from ~1M samples to ~600k
;    Should only need one or two of these for comparison.


[emcee]
; The emcee sampler uses the concept of walkers, a collection
; ; of live points.  Sampling is done along lines that connect
; ; pairs of walkers.  The number of walkers must be at least
; ; 2*nparam + 1, but in general more than that usually works
; ; better.
burn=0.3
walkers = 160
; ; This many samples is overkill, just to make the plots
; ; look a lot nicer
samples = 10000
;;1000000
; ; This is the interval at which convergence diagnostics
; ; are performed
nsteps = 5
;

[test]
save_dir=examples/output_kv450_no_sys/kv450_no_sys_output
fatal_errors=T

[output]
filename=examples/output_kv450_no_sys/kv450_no_sys_%(RUN_NAME)s.txt
format=text

[pipeline]
modules = consistency camb sigma8_rescale halofit extrapolate_power load_nz projection cl2xi mini_2pt_like
values = examples/KV450_values_no_sys.ini
likelihoods = mini_2pt_like
extra_output = 
quiet=F
timing=T
debug=F

[consistency]
file = %(CSL_PATH)s/cosmosis-standard-library/utility/consistency/consistency_interface.py

[camb]
file = %(CSL_PATH)s/cosmosis-standard-library/boltzmann/camb/camb.so
mode=all
lmax=2500
feedback=0
kmin=1e-5
kmax=10.0
nk=200


[halofit]
file = %(CSL_PATH)s/cosmosis-standard-library/boltzmann/halofit/halofit_module.so
nk = 700

[sigma8_rescale]
file = %(CSL_PATH)s/cosmosis-standard-library/utility/sample_sigma8/sigma8_rescale.py

;[load_nz]
;file = %(CSL_PATH)s/cosmosis-standard-library/number_density/load_nz_fits/load_nz_fits.py
;nz_file = %(CSL_PATH)s/cosmosis-standard-library/likelihood/cfhtlens/cfhtlens_heymans13.fits
;data_sets=SAMPLE

[load_nz]
file = %(CSL_PATH)s/cosmosis-standard-library/number_density/load_nz/load_nz.py
filepath = %(CSL_PATH)s/examples/kv450_data/nofz/KiDS_2018-07-26_deepspecz_photoz_10th_BLIND_specweight_1000_4_ZB01t03_blindA_Nz.asc %(CSL_PATH)s/examples/kv450_data/nofz/KiDS_2018-07-26_deepspecz_photoz_10th_BLIND_specweight_1000_4_ZB03t05_blindA_Nz.asc %(CSL_PATH)s/examples/kv450_data/nofz/KiDS_2018-07-26_deepspecz_photoz_10th_BLIND_specweight_1000_4_ZB05t07_blindA_Nz.asc %(CSL_PATH)s/examples/kv450_data/nofz/KiDS_2018-07-26_deepspecz_photoz_10th_BLIND_specweight_1000_4_ZB07t09_blindA_Nz.asc %(CSL_PATH)s/examples/kv450_data/nofz/KiDS_2018-07-26_deepspecz_photoz_10th_BLIND_specweight_1000_4_ZB09t12_blindA_Nz.asc
;filepath = %(CSL_PATH)s/examples/kv450_data/nofz/KiDS_2018-07-26_deepspecz_photoz_10th_BLIND_specweight_1000_4_ZB01t03_blindA_Nz.asc %(CSL_PATH)s/examples/kv450_data/nofz/KiDS_2018-07-26_deepspecz_photoz_10th_BLIND_specweight_1000_4_ZB03t05_blindA_Nz.asc 
histogram = True
output_section = nz_KV450_5bin

;[linear_alignment]
;ile = %(CSL_PATH)s/cosmosis-standard-library/intrinsic_alignments/la_model/linear_alignments_interface.py
;method = bk_corrected

[projection]
file = %(CSL_PATH)s/cosmosis-standard-library/structure/projection/project_2d.py
ell_min = 0.1
ell_max = 5.0e5
n_ell = 400
shear-shear = KV450_5bin-KV450_5bin 
;shear-intrinsic = sample-sample
;intrinsic-intrinsic = sample-sample
;position-shear = sample-sample
verbose = T
get_kernel_peaks = F


;[add_intrinsic]
;file=%(CSL_PATH)s/cosmosis-standard-library/shear/add_intrinsic/add_intrinsic.py
;position-shear=False

;This Nicaea code converts C_ell into xi(theta).
;It is fast and accurate but requires a high ell_max, as shown above
[cl2xi]
file = %(CSL_PATH)s/cosmosis-standard-library/shear/cl_to_xi_nicaea/nicaea_interface.so
corr_type = 0


;[2pt_like]
;file = %(CSL_PATH)s/cosmosis-standard-library/likelihood/2pt/2pt_like.py
;data_file=%(CSL_PATH)s/cosmosis-standard-library/likelihood/cfhtlens/cfhtlens_heymans13.fits
;gaussian_covariance=F
;covmat_name=COVMAT
;covariance_realizations = 1656
;like_name=cfhtlens

;data_sets=all
;data_sets = xi_plus xi_minus

[extrapolate_power]
file=%(CSL_PATH)s/cosmosis-standard-library/boltzmann/extrapolate/extrapolate_power.py
kmax=500.0

[mini_2pt_like]
file = %(KCAP_PATH)s/utils/mini_2pt_like.py
n_bin = 5
data_filename = %(KCAP_PATH)s/examples/kv450_data/data_vector/KV450_reweight_3x4x4_v2_good_xipm_mcor_5bin.dat
cut_xi_plus = 7 8
cut_xi_minus = 0 1 2
order_cov = xi_pm-bin-theta
order_data = montepython
;bin_1_1 = %(KCAP_PATH)s/examples/kv450_data/data_vector/TC_KV450_GALL_reweight_3x3x3_v2_good_xi_e1cor_e2cor_A_tomo_1_1_logbin.dat
;bin_2_1 = %(KCAP_PATH)s/examples/kv450_data/data_vector/TC_KV450_GALL_reweight_3x3x3_v2_good_xi_e1cor_e2cor_A_tomo_1_2_logbin.dat
;bin_2_2 = %(KCAP_PATH)s/examples/kv450_data/data_vector/TC_KV450_GALL_reweight_3x3x3_v2_good_xi_e1cor_e2cor_A_tomo_2_2_logbin.dat
;bin_3_1 = %(KCAP_PATH)s/examples/kv450_data/data_vector/TC_KV450_GALL_reweight_3x3x3_v2_good_xi_e1cor_e2cor_A_tomo_1_3_logbin.dat
;bin_3_2 = %(KCAP_PATH)s/examples/kv450_data/data_vector/TC_KV450_GALL_reweight_3x3x3_v2_good_xi_e1cor_e2cor_A_tomo_2_3_logbin.dat
;bin_3_3 = %(KCAP_PATH)s/examples/kv450_data/data_vector/TC_KV450_GALL_reweight_3x3x3_v2_good_xi_e1cor_e2cor_A_tomo_3_3_logbin.dat
;bin_4_1 = %(KCAP_PATH)s/examples/kv450_data/data_vector/TC_KV450_GALL_reweight_3x3x3_v2_good_xi_e1cor_e2cor_A_tomo_1_4_logbin.dat
;bin_4_2 = %(KCAP_PATH)s/examples/kv450_data/data_vector/TC_KV450_GALL_reweight_3x3x3_v2_good_xi_e1cor_e2cor_A_tomo_2_4_logbin.dat
;bin_4_3 = %(KCAP_PATH)s/examples/kv450_data/data_vector/TC_KV450_GALL_reweight_3x3x3_v2_good_xi_e1cor_e2cor_A_tomo_3_4_logbin.dat
;bin_4_4 = %(KCAP_PATH)s/examples/kv450_data/data_vector/TC_KV450_GALL_reweight_3x3x3_v2_good_xi_e1cor_e2cor_A_tomo_4_4_logbin.dat
;bin_5_1 = %(KCAP_PATH)s/examples/kv450_data/data_vector/TC_KV450_GALL_reweight_3x3x3_v2_good_xi_e1cor_e2cor_A_tomo_1_5_logbin.dat
;bin_5_2 = %(KCAP_PATH)s/examples/kv450_data/data_vector/TC_KV450_GALL_reweight_3x3x3_v2_good_xi_e1cor_e2cor_A_tomo_2_5_logbin.dat
;bin_5_3 = %(KCAP_PATH)s/examples/kv450_data/data_vector/TC_KV450_GALL_reweight_3x3x3_v2_good_xi_e1cor_e2cor_A_tomo_3_5_logbin.dat
;bin_5_4 = %(KCAP_PATH)s/examples/kv450_data/data_vector/TC_KV450_GALL_reweight_3x3x3_v2_good_xi_e1cor_e2cor_A_tomo_4_5_logbin.dat
;bin_5_5 = %(KCAP_PATH)s/examples/kv450_data/data_vector/TC_KV450_GALL_reweight_3x3x3_v2_good_xi_e1cor_e2cor_A_tomo_5_5_logbin.dat
cov = %(KCAP_PATH)s/examples/kv450_data/cov/cov_analytic.txt
like_name = mini_2pt_like
keep_theory_vector = T