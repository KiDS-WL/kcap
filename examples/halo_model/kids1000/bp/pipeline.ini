[DEFAULT]
; For cuillin
MY_PATH      = /net/home/fohlen13/mahony/
; For my laptop
;MY_PATH      = /Users/marika_asgary/Documents/CosmicShear/repos/

stats_name   = bp
CSL_PATH     = %(MY_PATH)s/kcap/cosmosis-standard-library/
KCAP_PATH    = %(MY_PATH)s/kcap/
RESULTS_PATH = %(MY_PATH)s/kcap/examples/halo_model/kids1000/bp/
COSEBIS_PATH = %(MY_PATH)s/kcap/cosebis

OUTPUT_FOLDER = %(RESULTS_PATH)s/chain/
INPUT_FOLDER  = %(MY_PATH)s/Cat_to_Obs_K1000_P1/data/kids/
CONFIG_FOLDER = %(RESULTS_PATH)s/

blind         = C
name_tag      = with_m_bias
cat_version   = V1.0.0A_ugriZYJHKs_photoz_SG_mask_LF_svn_309c_2Dbins_v2_goldclasses_Flag_SOM_Fid
redshift_name = source

SAMPLER_NAME = test
RUN_NAME = %(SAMPLER_NAME)s_%(blind)s_halo

data_file = %(INPUT_FOLDER)s/fits_iterative_covariance/%(stats_name)s_KIDS1000_Blind%(blind)s_%(name_tag)s_%(cat_version)s.fits

bandpower_folder=%(MY_PATH)s/kids1000_chains/BandPower_outputs/

;;; halo model defaults
nz_def = 20
zmin_def =  0.0
zmax_def = 6.0
nmass_def = 200
logmassmin_def = 9.0
logmassmax_def = 16.0


[pipeline]
modules = sample_S8 sigma8toAs correlated_dz_priors one_parameter_hmcode camb extrapolate_power hmf_and_halo_bias hod nfw_halo centrals_alignment satellites_alignment radial_satellite_alignment pk load_nz_fits source_photoz_bias projection bandpower_shear_e scale_cuts likelihood
;modules = sample_S8 sigma8toAs correlated_dz_priors one_parameter_hmcode camb extrapolate_power load_nz_fits source_photoz_bias linear_alignment projection bandpower_shear_e scale_cuts likelihood
values  = %(CONFIG_FOLDER)s/values.ini
priors  = %(CONFIG_FOLDER)s/priors.ini
likelihoods  = loglike
extra_output = cosmological_parameters/S_8 cosmological_parameters/sigma_8 cosmological_parameters/A_s cosmological_parameters/omega_m cosmological_parameters/omega_nu cosmological_parameters/omega_lambda cosmological_parameters/cosmomc_theta nofz_shifts/bias_1 nofz_shifts/bias_2 nofz_shifts/bias_3 nofz_shifts/bias_4 nofz_shifts/bias_5 delta_z_out/bin_1 delta_z_out/bin_2 delta_z_out/bin_3 delta_z_out/bin_4 delta_z_out/bin_5  
quiet = F
timing = T
debug = F

[runtime]
sampler = %(SAMPLER_NAME)s

[output]
filename = %(OUTPUT_FOLDER)s/output_%(RUN_NAME)s.txt
format = text

[test]
save_dir=%(OUTPUT_FOLDER)s/output_%(RUN_NAME)s
fatal_errors=T

[maxlike]
method = Nelder-Mead
tolerance = 0.01
maxiter = 1000000
max_posterior = T

[multinest]
max_iterations=100000
multinest_outfile_root= %(OUTPUT_FOLDER)s/%(RUN_NAME)s_
resume=T
tolerance = 0.01
constant_efficiency = F
live_points = 1000
efficiency = 0.3

[sample_S8]
file = %(KCAP_PATH)s/utils/sample_S8.py
s8_name = s_8_input

[sigma8toAs]
file = %(KCAP_PATH)s/utils/sigma8toAs.py

[correlated_dz_priors]
file = %(KCAP_PATH)s/utils/correlated_priors.py
uncorrelated_parameters = nofz_shifts/uncorr_bias_1 nofz_shifts/uncorr_bias_2 nofz_shifts/uncorr_bias_3 nofz_shifts/uncorr_bias_4 nofz_shifts/uncorr_bias_5
output_parameters = nofz_shifts/bias_1 nofz_shifts/bias_2 nofz_shifts/bias_3 nofz_shifts/bias_4 nofz_shifts/bias_5
covariance = %(INPUT_FOLDER)s/nofz/SOM_cov_multiplied.asc

[one_parameter_hmcode]
file = %(KCAP_PATH)s/utils/one_parameter_hmcode.py
a_0 = 0.98
a_1 = -0.12

[camb]
file = %(CSL_PATH)s/boltzmann/pycamb/camb_interface.py
do_reionization = F
mode = transfer
nonlinear = pk
halofit_version = mead
neutrino_hierarchy = normal
kmax = 20.0
zmid = 2.0
nz_mid = 100
zmax = 6.0
nz = 150
background_zmax = 6.0
background_zmin = 0.0
background_nz = 6000

[extrapolate_power]
file = %(CSL_PATH)s/boltzmann/extrapolate/extrapolate_power.py
kmax = 500.0

[load_nz_fits]
file = %(CSL_PATH)s/number_density/load_nz_fits/load_nz_fits.py
nz_file = %(data_file)s
data_sets = %(redshift_name)s

[source_photoz_bias]
file = %(CSL_PATH)s/number_density/photoz_bias/photoz_bias.py
mode = additive
sample = nz_%(redshift_name)s
bias_section  = nofz_shifts
interpolation = cubic
output_deltaz = T
output_section_name = delta_z_out

[linear_alignment]
file = %(CSL_PATH)s/intrinsic_alignments/la_model/linear_alignments_interface.py
method = bk_corrected

[projection]
file = %(CSL_PATH)s/structure/projection/project_2d.py
ell_min = 1.0
ell_max = 1.0e4
n_ell = 50
position-shear = F
shear-shear = %(redshift_name)s-%(redshift_name)s 
shear-intrinsic = %(redshift_name)s-%(redshift_name)s
intrinsic-intrinsic = %(redshift_name)s-%(redshift_name)s
;fast-shear-shear-ia = %(redshift_name)s-%(redshift_name)s 
verbose = F
get_kernel_peaks = F

[add_intrinsic]
file=%(CSL_PATH)s/shear/add_intrinsic/add_intrinsic.py
position-shear=False

[bandpower_shear_e]
file = %(COSEBIS_PATH)s/libbandpower.so
type = cosmic_shear_e
response_function_type = tophat
analytic = 1
output_section_name = bandpower_shear_e
l_min = 100.0
l_max = 1500.0
nbands = 8
apodise = 1
delta_x = 0.5
theta_min = 0.5
theta_max = 300.0
output_foldername = %(bandpower_folder)s

[scale_cuts]
file = %(KCAP_PATH)s/modules/scale_cuts/scale_cuts.py
output_section_name = scale_cuts_output
data_and_covariance_fits_filename = %(data_file)s
use_stats = PeeE
keep_ang_peee = 100 1500
keep_ang_En   = 0.5 5.5 
keep_ang_xiP  = 0.5 300.0 ; 75.0 if no delta_c
keep_ang_xiM  = 4.0 300.0
xi_plus_extension_name = xiP
xi_minus_extension_name = xiM
bandpower_ggl_extension_name = PneE
bandpower_e_cosmic_shear_extension_name = PeeE
cosebis_extension_name = En
xi_plus_section_name = shear_xi_plus_binned
xi_minus_section_name = shear_xi_minus_binned
bandpower_ggl_section_name = bandpower_galaxy_shear
bandpower_e_cosmic_shear_section_name = bandpower_shear_e
cosebis_section_name = cosebis
simulate = F
simulate_with_noise = T
mock_filename = 

[likelihood]
file = %(KCAP_PATH)s/utils/mini_like.py
input_section_name = scale_cuts_output
like_name = loglike

;;;; Halo model modules
[hmf_and_halo_bias]
file = %(KCAP_PATH)s/halo_model/dev/v3/hmf_and_hbf_tinker.py
log_mass_min = %(logmassmin_def)s
log_mass_max = %(logmassmax_def)s
nmass = %(nmass_def)s
zmin= %(zmin_def)s
zmax= %(zmax_def)s
nz= %(nz_def)s 
do_halo_bias = True

[hod]
file = %(KCAP_PATH)s/halo_model/dev/v3/hod_interface_v2.py
; if luminosities_z = True, then the luminosities are read from the luminosities_file [z_mid, lum_min(z), lum_max(z)]
luminosities_z = False 
luminosities_file = /your/path/to/file.txt
nlum = 200
; -
; lum_min, lum_max, zmin, zmax and nz are only needed if luminosities_z = False
; -
lum_min = 4.698941e+08
lum_max = 1.180321e+11
zmin = %(zmin_def)s
zmax = %(zmax_def)s
nz = %(nz_def)s 
abs_mag_sun = 4.68
log_mass_min = %(logmassmin_def)s
log_mass_max = %(logmassmax_def)s
nmass = %(nmass_def)s
z_median = 0.4
do_hod = True
do_number_density = True
do_galaxy_linear_bias = True
do_luminosity_function = False
; options are: "lf_z" or "lf_zmed" depending if you want to calculate the LF per each redshift or on the median one
lf_mode = "lf_z"
do_clf_quantities = False
name =

[nfw_halo]
file = %(KCAP_PATH)s/halo_model/dev/v3/nfw_halo.py
zmin = %(zmin_def)s
zmax = %(zmax_def)s
nz = %(nz_def)s
log_mass_min = %(logmassmin_def)s
log_mass_max = %(logmassmax_def)s
nmass = 20
nmass_fast =

[centrals_alignment]
file = %(KCAP_PATH)s/halo_model/dev/v3/ia_amplitudes_all_models.py
galaxy_type = centrals
; if galaxy_type = centrals, then the choices are : 'None', 'Joachimi2011' (single power law), 'double_powerlaw'
luminosity_dependence='None'
z_loglum_file= /path/to/redcen_lum.fits ; a fits file containing the columns 'z' and 'loglum' 
zmin= %(zmin_def)s
zmax= %(zmax_def)s
nz = %(nz_def)s
name =

[satellites_alignment]
file = %(KCAP_PATH)s/halo_model/dev/v3/ia_amplitudes_all_models.py
galaxy_type = satellites
; if galaxy_type = satellites, then the choices are : 'None', 'satellite_luminosity_dependence' (power law)
luminosity_dependence='None'
z_loglum_file= /path/to/redsat_lum.fits
zmin= %(zmin_def)s
zmax= %(zmax_def)s
nz = %(nz_def)s
name =

[radial_satellite_alignment]
file = %(KCAP_PATH)s/halo_model/dev/v3/wkm_interp_interface_v3_eps.py
zmin = %(zmin_def)s
zmax = %(zmax_def)s
nz = %(nz_def)s
log_mass_min = %(logmassmin_def)s
log_mass_max = %(logmassmax_def)s
nmass = %(nmass_def)s
kmin = 0.1
kmax = 1000.
nk = 1000
name=

[pk]
file= %(KCAP_PATH)s/halo_model/dev/v3/pk_interface_v3.py
;log-spaced mass in units of M_sun/h
log_mass_min = %(logmassmin_def)s
log_mass_max = %(logmassmax_def)s
nmass = %(nmass_def)s
zmin = %(zmin_def)s
zmax = %(zmax_def)s
nz = %(nz_def)s
; still need to implement this - leave False
pipeline = False
p_GG = False
p_nn = False
p_xgG = False
p_gI = False
p_xGI = True
p_II = True
two_halo_only = False
hod_section_name = hod
name =
